.data
symbol: .space 28
array: .space 28
str_space: .asciiz " "
str_enter: .asciiz "\n"

.macro RI(%n)
    li $v0,5
    syscall
    move %n,$v0
.end_macro

.macro PI(%n)
    sw $a0,($sp)
    addi $sp,$sp,-4
    move $a0,%n
    li $v0,1
    syscall
    addi $sp,$sp,4
    lw $a0,($sp)
.end_macro

.macro PSPACE
    sw $a0,($sp)
    addi $sp,$sp,-4
    la $a0, str_space
    li $v0, 4
    syscall
    addi $sp,$sp,4
    lw $a0,($sp)
.end_macro

.macro PENTER
    sw $a0,($sp)
    addi $sp,$sp,-4
    la $a0, str_enter
    li $v0, 4
    syscall
    addi $sp,$sp,4
    lw $a0,($sp)
.end_macro

.text
    RI($s0)#s0 == n is protected
    li $a0,0
    jal FullArray
    li $v0,10
    syscall

FullArray:
    sw $ra,($sp)
    addi $sp,$sp,-4
    blt $a0,$s0,end_if
    li $t1,0   # $t1 == i
    for_i_begin:
        beq $t1,$s0,for_i_end
        sll $t2,$t1,2
        lw $t3,array($t2)
        PI($t3)
        PSPACE
        addi $t1,$t1,1
        j for_i_begin
    for_i_end:
        PENTER
        addi $sp,$sp,4
        lw $ra,($sp)
        jr $ra
    end_if:
        li $t1,0
        for_i_begin1:
            beq $t1,$s0,for_i_end1
            sll $t2,$t1,2
            lw $t3,symbol($t2)
            bne $t3,$0,end_if_2
            addi $t4,$t1,1
            sll $t0,$a0,2
            sw $t4,array($t0)
            li $t4,1
            sw $t4,symbol($t2)
            sw $a0,($sp)
            addi $sp,$sp,-4
            sw $t1,($sp)
            addi $sp,$sp,-4
            sw $t2,($sp)
            addi $sp,$sp,-4
            addi $a0,$a0,1
            jal FullArray
            addi $sp,$sp,4
            lw $t2,($sp)
            addi $sp,$sp,4
            lw $t1,($sp)
            addi $sp,$sp,4
            lw $a0,($sp)
            sw $0,symbol($t2)
            end_if_2:
            addi $t1,$t1,1
            j for_i_begin1
        for_i_end1:
        addi $sp,$sp,4
        lw $ra,($sp)
        jr $ra
        