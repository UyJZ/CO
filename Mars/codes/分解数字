.data
ans: .space 400
str_space: .asciiz " "
str_enter: .asciiz "\n"
str_plus: .asciiz "+"
str_equal: .asciiz "="

.macro PSPACE
    sw $a0,($sp)
    addi $sp,$sp,-4
    li $v0,4
    la $a0,str_space
    syscall
    addi $sp,$sp,4
    lw $a0,($sp)
.end_macro

.macro PENTER
    sw $a0,($sp)
    addi $sp,$sp,-4
    li $v0,4
    la $a0,str_enter
    syscall
    addi $sp,$sp,4
    lw $a0,($sp)
.end_macro

.macro RI(%a)
    li $v0,5
    syscall
    move %a,$v0
.end_macro

.macro PI(%a)
    sw $a0,($sp)
    addi $sp,$sp,-4
    li $v0,1
    move $a0,%a
    syscall
    addi $sp,$sp,4
    lw $a0,($sp)
.end_macro

.macro PPLUS
    sw $a0,($sp)
    addi $sp,$sp,-4
    li $v0,4
    la $a0,str_plus
    syscall
    addi $sp,$sp,4
    lw $a0,($sp)
.end_macro

.macro PEQUAL
    sw $a0,($sp)
    addi $sp,$sp,-4
    li $v0,4
    la $a0,str_equal
    syscall
    addi $sp,$sp,4
    lw $a0,($sp)
.end_macro

.macro END
    li $v0,10
    syscall
.end_macro 

.macro push(%a)
    sw %a,($sp)
    addi $sp,$sp,-4
.end_macro 

.macro pop(%a)
    addi $sp,$sp,4
    lw %a,($sp)
.end_macro

.text
    RI($s0) #s0 = res,s1 = num, s2 = sum
    li $a0,0
    jal dfs
    END
    
dfs:
    push($ra)
    if1:
        beqz $a0,else1
        sll $t0,$s1,2
        sw $a0,ans($t0)
        add $s2,$s2,$a0
        addi $s1,$s1,1
    else1:
        blt $s2,$s0,if3
        bgt $s2,$s0,end
        PI($s0)
        PSPACE
        PEQUAL
        PSPACE
        li $t0,0
        loop1:
            beq $t0,$s1,loop1_end
            sll $t1,$t0,2
            lw $t2,ans($t1)
            PSPACE
            PI($t2)
            PSPACE
            addi $t0,$t0,1
            beq $t0,$s1,loop1_end
            PPLUS
            j loop1
        loop1_end:
        PENTER
        pop($ra)
        jr $ra
    if3:
        move $t0,$a0
        sub $t1,$s0,$s2
        loop2:
            bgt $t0,$t1,loop2_end
            beqz $t0,end2
                push($a0)
                push($t0)
                push($s2)
                push($s1)
                push($t1)
                move $a0,$t0
                jal dfs
                pop($t1)
                pop($s1)
                pop($s2)
                pop($t0)
                pop($a0)
            end2:
            addi $t0,$t0,1
            j loop2
        loop2_end:
    end:
    pop($ra)
    jr $ra
        
        
